Stateless functional components usually have props passed to them.

To access these props, give your stateless functional component a parameter. This parameter will automatically be equal to the component’s props object.

It’s customary to name this parameter props. Read Example.js to see how it works.

Not only are stateless functional components more concise, but they will subtly influence how you think about components in a positive way. They emphasize the fact that components are basically functions! A component takes two optional inputs, props and state, and outputs HTML and/or other components.

You’ll be seeing a lot of stateless functional components in the next React course!

__________________

Instructions
1.
Open GuineaPigs.js.

After you divided GuineaPigs into GuineaPigs and GuineaPigsContainer, GuineaPigs was left with only a render function. That means that GuineaPigs can be rewritten as a stateless functional component!

Rewrite the GuineaPigs component class as a stateless functional component. Use Example as a guide.

Make sure to delete the original GuineaPigs class when you’re done.

Click Run and make sure that your guinea pigs are still working!